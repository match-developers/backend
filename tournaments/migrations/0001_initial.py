# Generated by Django 4.2.13 on 2024-09-28 06:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("matchmaking", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Tournament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tournament_name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "tournament_type",
                    models.CharField(
                        choices=[("club", "Club"), ("individual", "Individual")],
                        default="individual",
                        max_length=50,
                    ),
                ),
                ("total_number_of_rounds", models.IntegerField()),
                ("max_teams", models.IntegerField()),
                ("start_date", models.DateField()),
                ("deadline", models.DateField()),
                (
                    "current_round",
                    models.CharField(
                        choices=[
                            ("16강", "Round of 16"),
                            ("8강", "Quarterfinals"),
                            ("4강", "Semifinals"),
                            ("결승", "Final"),
                        ],
                        default="16강",
                        max_length=50,
                    ),
                ),
                (
                    "scheduling_type",
                    models.CharField(
                        choices=[
                            ("organizer_based", "Organizer Based"),
                            ("deadline_based", "Deadline Based"),
                        ],
                        default="organizer_based",
                        max_length=50,
                    ),
                ),
                ("match_duration", models.DurationField()),
                (
                    "organizer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        related_name="tournaments", to="matchmaking.team"
                    ),
                ),
                (
                    "winning_method",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="matchmaking.winningmethod",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TournamentStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "current_round",
                    models.CharField(
                        choices=[
                            ("16강", "Round of 16"),
                            ("8강", "Quarterfinals"),
                            ("4강", "Semifinals"),
                            ("결승", "Final"),
                        ],
                        default="16강",
                        max_length=50,
                    ),
                ),
                (
                    "advancement_status",
                    models.CharField(
                        choices=[
                            ("in_progress", "In Progress"),
                            ("eliminated", "Eliminated"),
                            ("winner", "Winner"),
                        ],
                        default="in_progress",
                        max_length=50,
                    ),
                ),
                ("wins", models.IntegerField(default=0)),
                ("losses", models.IntegerField(default=0)),
                ("matches_played", models.IntegerField(default=0)),
                ("final_position", models.IntegerField(blank=True, null=True)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="matchmaking.team",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournaments.tournament",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TournamentMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("round_number", models.CharField(max_length=50)),
                ("match_date", models.DateField(blank=True, null=True)),
                ("match_time", models.TimeField(blank=True, null=True)),
                ("is_knockout_stage", models.BooleanField(default=True)),
                (
                    "away_team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="away_tournament_matches",
                        to="matchmaking.team",
                    ),
                ),
                (
                    "home_team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="home_tournament_matches",
                        to="matchmaking.team",
                    ),
                ),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="matchmaking.match",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournaments.tournament",
                    ),
                ),
            ],
            options={
                "unique_together": {("tournament", "match")},
            },
        ),
    ]
